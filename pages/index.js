import Head from 'next/head'
// import Image from 'next/image'
import Link from 'next/link'
import { css } from '@emotion/css'
import {container, body} from '../styles/global'
import { getDataPagination } from "../pages/api/pagination";
import { useEffect, useState } from 'react'
import Router from "next/router";
import {getDataAll, getDataById} from './api/getData'
import {csslistName, btnDiv, ar, desc,nextcss,mypokemoncss,dflex,dflex2,img_, overlay} from "../styles/style-home";

const Home =({pagination, pokemon, r})=>{
  const [nextUrl, setNextUrl] = useState(pagination.next)
  const [prevUrl, setPrevUrl] = useState(pagination.previous)
  const [listPokemon, setListPokemon] = useState(pokemon)
  const [imgPokemoan, setImgPokemoan] = useState(r)
  const [loading, setLoading] = useState(false)

  // console.log(r[0].img.dream_world.front_default);

  const NextShow = async() =>{
    setLoading(true)
    const r = await getDataPagination(nextUrl)
    setNextUrl(r.resp.next)
    setPrevUrl(r.resp.previous)
    setListPokemon(r.pokemon)
    setImgPokemoan(r.r)
    document.querySelector('.scroll-here').scrollIntoView({behavior: "smooth", block: "start", inline: "nearest"});
    setLoading(false)
  }
  const prevShow = async() =>{
    setLoading(true)
    const r = await getDataPagination(prevUrl)
    setNextUrl(r.resp.next)
    setPrevUrl(r.resp.previous)
    setListPokemon(r.pokemon)
    setImgPokemoan(r.r)
    document.querySelector('.scroll-here').scrollIntoView({behavior: "smooth", block: "start", inline: "nearest"});
    setLoading(false)
  }

  useEffect(()=>{
  },[])

  return (
    <>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={css`${container}`}>
          <div className={css`${dflex};@media (min-width: 600px) { padding: 0 6px;}`}>
            <h1 className='scroll-here'>
              List Pokemon 
            </h1>
            <span className={css`font-size: 20px;font-weight: 600;`}>Total : {pagination.count }</span>
          </div>

        {listPokemon.length > 0 && imgPokemoan.length > 0 && 
            <div className={dflex2}>
                {listPokemon.map((item, i) => 
                  <Link href={`/pokemon-detail/${item.url}`} key={i} >
                      <a className={css`${csslistName}`}>
                        <span className={css`font-size: 14px`}>#{item.url}</span>
                        <img className={img_} src={imgPokemoan[i].img.dream_world.front_default}  alt="" width={300} height={300} loading="eager"/>
                          <p className={desc}>{ item.name}</p>
                      </a>
                  </Link>
                    )}
            </div>
          } 
        <div className={btnDiv}>
          <div className={nextcss}
              onClick={()=> prevShow()}> <span className={ar}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 19l-7-7 7-7" />
            </svg></span> Previous</div>
          <div className={nextcss}
              onClick={()=> NextShow()}>
                Next
                <span className={ar}>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                </svg>
                </span>
              </div>
        </div>
        <div  onClick={() => Router.push('/my-pokemon')} className={mypokemoncss}>My Pokemon List</div>
        </div>
      </main>
      {loading && <div className={overlay}><div></div></div>}
    </>
  )
}


Home.getInitialProps = async () => {
  // const res = await fetch('https://pokeapi.co/api/v2/pokemon/')
  const resp = await getDataAll()
  let list = [];
  const pokemon = resp.results.map((e) => { 
    const u = e['url'].split('/');
    const url = `${u[u.length-2]}`;
    list.push(url)
    return { "name": e["name"], "url": url } 
  })
  let r = [];
  for (const a of list) {
      const r_ = await getDataById(a)
      r.push({'img': r_.sprites.other})
  }
  const pagination = {
    'count': resp.count,
    'next': resp.next,
    'previous': resp.previous
  }
  return { pagination, pokemon, r}
}

export default Home;